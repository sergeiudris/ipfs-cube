version: "3.8"

volumes:

  ctx:
    driver: local
    driver_opts:
      type: none
      device: ../../
      o: bind

services:

  app:
    image: ipfs-cube.app
    build:
      context: ./app
      dockerfile: ./release.Dockerfile
      args:
        workdir:  /ctx/ipfs-cube/bin/app
    # https://github.com/docker/compose/issues/5007#issuecomment-335815508
    # https://docs.docker.com/compose/startup-order/
    command: bash -c "while ping -c1 compiler &>/dev/null ; do sleep 1 ; done; echo 'compiler finished' && bash f main"
    depends_on: 
      - compiler
    links: 
      - compiler:compiler
    ports:
      - 3080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - type: volume
        source: ctx
        target: /ctx
        volume:
          nocopy: true

  compiler:
    image: ipfs-cube.compiler
    build:
      context: ./compiler
      dockerfile: ./Dockerfile
      args:
        workdir: /ctx/ipfs-cube/bin/compiler
    # command: tail -f /dev/null
    command: bash f release
    volumes:
      - type: volume
        source: ctx
        target: /ctx
        volume:
          nocopy: true

  zero:
    image: dgraph/dgraph:latest
    volumes:
      - /tmp/data:/dgraph
    ports:
      - 5080:5080
      - 6080:6080
    restart: on-failure
    command: dgraph zero --my=zero:5080

  alpha:
    image: dgraph/dgraph:latest
    volumes:
      - /tmp/data:/dgraph
    ports:
      - 8080:8080
      - 9080:9080
    restart: on-failure
    command: dgraph alpha --my=alpha:7080 --zero=zero:5080

  ratel:
    image: dgraph/dgraph:latest
    ports:
      - 8000:8000
    command: dgraph-ratel

  ipfs0:
    image: ipfs/go-ipfs:v0.8.0
    # ports:
    #   - "4001:4001" # ipfs swarm - expose if needed/wanted
    #   - "5001:5001" # ipfs api - expose if needed/wanted
    #   - "8080:8080" # ipfs gateway - expose if needed/wanted
    volumes:
      - ./.ipfs0:/data/ipfs

  cluster0:
    image: ipfs/ipfs-cluster:v0.13.1
    depends_on:
      - ipfs0
    environment:
      CLUSTER_PEERNAME: cluster0
      # CLUSTER_SECRET: ${CLUSTER_SECRET}
      CLUSTER_SECRET: "4e2d42966a99d6f9587cfde10f82b21972136e6bd436f2ae0ad917918cbef05b"
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs0/tcp/5001
      CLUSTER_CRDT_TRUSTEDPEERS: '*'
      CLUSTER_MONITORPINGINTERVAL: 2s # Speed up peer discovery
    volumes:
      - ./.cluster0:/data/ipfs-cluster